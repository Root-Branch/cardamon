//! `SeaORM` Entity, @generated by sea-orm-codegen 1.0.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "power_curve")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    #[sea_orm(column_type = "Float")]
    pub a: f32,
    #[sea_orm(column_type = "Float")]
    pub b: f32,
    #[sea_orm(column_type = "Float")]
    pub c: f32,
    #[sea_orm(column_type = "Float")]
    pub d: f32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::cpu::Entity")]
    Cpu,
}

impl Related<super::cpu::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Cpu.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
